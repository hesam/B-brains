solver: "MiniSat"
symmetry_breaking: 3
//skolem_depth : 5
flatten: false
bit_width: 8
univ: u80 /* A0-A19: ints     A20-A79: squares */
bounds s0 /* Cols */ : u10
bounds s1 /* Rows */ : u6
bounds s2 /* Vals */ : u12
bounds s3 /* Squares */ : u60@20
bounds r0 /* SquareCols */ : {[A20, A0],[A21, A1],[A22, A2],[A23, A3],[A24, A4],[A25, A5],[A26, A6],[A27, A7],[A28, A8],[A29, A9],[A30, A0],[A31, A1],[A32, A2],[A33, A3],[A34, A4],[A35, A5],[A36, A6],[A37, A7],[A38, A8],[A39, A9],[A40, A0],[A41, A1],[A42, A2],[A43, A3],[A44, A4],[A45, A5],[A46, A6],[A47, A7],[A48, A8],[A49, A9],[A50, A0],[A51, A1],[A52, A2],[A53, A3],[A54, A4],[A55, A5],[A56, A6],[A57, A7],[A58, A8],[A59, A9],[A60, A0],[A61, A1],[A62, A2],[A63, A3],[A64, A4],[A65, A5],[A66, A6],[A67, A7],[A68, A8],[A69, A9],[A70, A0],[A71, A1],[A72, A2],[A73, A3],[A74, A4],[A75, A5],[A76, A6],[A77, A7],[A78, A8],[A79, A9]}
bounds r1 /* SquareRows */ : {[A20, A0],[A21, A0],[A22, A0],[A23, A0],[A24, A0],[A25, A0],[A26, A0],[A27, A0],[A28, A0],[A29, A0],[A30, A1],[A31, A1],[A32, A1],[A33, A1],[A34, A1],[A35, A1],[A36, A1],[A37, A1],[A38, A1],[A39, A1],[A40, A2],[A41, A2],[A42, A2],[A43, A2],[A44, A2],[A45, A2],[A46, A2],[A47, A2],[A48, A2],[A49, A2],[A50, A3],[A51, A3],[A52, A3],[A53, A3],[A54, A3],[A55, A3],[A56, A3],[A57, A3],[A58, A3],[A59, A3],[A60, A4],[A61, A4],[A62, A4],[A63, A4],[A64, A4],[A65, A4],[A66, A4],[A67, A4],[A68, A4],[A69, A4],[A70, A5],[A71, A5],[A72, A5],[A73, A5],[A74, A5],[A75, A5],[A76, A5],[A77, A5],[A78, A5],[A79, A5]}
bounds r2 /* Neigbors */ :  /*[{}, u60@20->u60@20]*/
                              {[A20, A21], [A20, A30], [A21, A20], [A21, A22], [A21, A31], [A22, A21], [A22, A23], [A22, A32], [A23, A22], [A23, A24], [A23, A33], [A24, A23], [A24, A25], [A24, A34], [A25, A24], [A25, A26], [A25, A35], [A26, A25], [A26, A27], [A26, A36], [A27, A26], [A27, A28], [A27, A37], [A28, A27], [A28, A29], [A28, A38], [A29, A28], [A29, A39], [A30, A20], [A30, A31], [A30, A40], [A31, A21], [A31, A30], [A31, A32], [A31, A41], [A32, A22], [A32, A31], [A32, A33], [A32, A42], [A33, A23], [A33, A32], [A33, A34], [A33, A43], [A34, A24], [A34, A33], [A34, A35], [A34, A44], [A35, A25], [A35, A34], [A35, A36], [A35, A45], [A36, A26], [A36, A35], [A36, A37], [A36, A46], [A37, A27], [A37, A36], [A37, A38], [A37, A47], [A38, A28], [A38, A37], [A38, A39], [A38, A48], [A39, A29], [A39, A38], [A39, A49], [A40, A30], [A40, A41], [A40, A50], [A41, A31], [A41, A40], [A41, A42], [A41, A51], [A42, A32], [A42, A41], [A42, A43], [A42, A52], [A43, A33], [A43, A42], [A43, A44], [A43, A53], [A44, A34], [A44, A43], [A44, A45], [A44, A54], [A45, A35], [A45, A44], [A45, A46], [A45, A55], [A46, A36], [A46, A45], [A46, A47], [A46, A56], [A47, A37], [A47, A46], [A47, A48], [A47, A57], [A48, A38], [A48, A47], [A48, A49], [A48, A58], [A49, A39], [A49, A48], [A49, A59], [A50, A40], [A50, A51], [A50, A60], [A51, A41], [A51, A50], [A51, A52], [A51, A61], [A52, A42], [A52, A51], [A52, A53], [A52, A62], [A53, A43], [A53, A52], [A53, A54], [A53, A63], [A54, A44], [A54, A53], [A54, A55], [A54, A64], [A55, A45], [A55, A54], [A55, A56], [A55, A65], [A56, A46], [A56, A55], [A56, A57], [A56, A66], [A57, A47], [A57, A56], [A57, A58], [A57, A67], [A58, A48], [A58, A57], [A58, A59], [A58, A68], [A59, A49], [A59, A58], [A59, A69], [A60, A50], [A60, A61], [A60, A70], [A61, A51], [A61, A60], [A61, A62], [A61, A71], [A62, A52], [A62, A61], [A62, A63], [A62, A72], [A63, A53], [A63, A62], [A63, A64], [A63, A73], [A64, A54], [A64, A63], [A64, A65], [A64, A74], [A65, A55], [A65, A64], [A65, A66], [A65, A75], [A66, A56], [A66, A65], [A66, A67], [A66, A76], [A67, A57], [A67, A66], [A67, A68], [A67, A77], [A68, A58], [A68, A67], [A68, A69], [A68, A78], [A69, A59], [A69, A68], [A69, A79], [A70, A60], [A70, A71], [A71, A61], [A71, A70], [A71, A72], [A72, A62], [A72, A71], [A72, A73], [A73, A63], [A73, A72], [A73, A74], [A74, A64], [A74, A73], [A74, A75], [A75, A65], [A75, A74], [A75, A76], [A76, A66], [A76, A75], [A76, A77], [A77, A67], [A77, A76], [A77, A78], [A78, A68], [A78, A77], [A78, A79], [A79, A69], [A79, A78]}         
bounds r3 /* Neigborhood */ : [{}, u12->u60@20]
bounds r4   : [{}, u60@20->u60@20] // NeigborsOfSamePiece
bounds r20 /* SquareVals */ : [{}, u60@20->u12]
int_bounds:
 [{A0}, {A1}, {A2}, {A3}, {A4}, {A5}, {A6}, {A7}, {A8}, {A9}, {A10}, {A11}, {A12}, {A13}, {A14}, {A15}, {A16}, {A17}, {A18}, {A19}]
solve FUNCTION(r20, u60@20->one u12) && // all squares filled with values
/*        (all [S0: one s3, S1: one s3] | 
           ((S0.r0 = S1.r0 && ((sum(S0.r1) > sum(S1.r1) && sum(S0.r1) - sum(S1.r1) = 1) || 
                              (sum(S1.r1) > sum(S0.r1) && sum(S1.r1) - sum(S0.r1) = 1))) ||
            (S0.r1 = S1.r1 && ((sum(S0.r0) > sum(S1.r0) && sum(S0.r0) - sum(S1.r0) = 1) || 
                              (sum(S1.r0) > sum(S0.r0) && sum(S1.r0) - sum(S0.r0) = 1))))
             <=> (S1 in S0.r2)) && */ // defining neigbor squares  
      (all [S0: one s3, S1: one s3] | 
           (S1 in S0.r2 && S0.r20 = S1.r20 <=> S1 in S0.r4)) && // defining neigbors of same piece
      (all [S0: one s2] | ( #(r20.S0) = 5 )) && // only pentomino pieces! 
      (all [S0: one s3] | some S0.r4) && // no square w/o a neigbor of same piece
      r3 = ~r20 &&
      (all [S0: one s2] | #({[S1: one S0.r3, S2: one S0.r3] | S2 in S1.r2}) = 8);